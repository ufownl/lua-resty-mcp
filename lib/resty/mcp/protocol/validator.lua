local mcp = {
  version = require("resty.mcp.version")
}

local _M = {
  _NAME = "resty.mcp.protocol.validator",
  _VERSION = mcp.version.module
}

local cjson = require("cjson.safe")
local jsonschema = require("jsonschema")

local function remove_meta(schema)
  if schema.properties then
    for name, subschema in pairs(schema.properties) do
      if string.sub(name, 1, 1) == "_" then
        schema.properties[name] = nil
      else
        remove_meta(subschema)
      end
    end
  end
end

local mcp_schema = assert(cjson.decode(ngx.decode_base64("")))
for key, def in pairs(mcp_schema.definitions) do
  remove_meta(def)
end
for key, def in pairs(mcp_schema.definitions) do
  local schema = {definitions = mcp_schema.definitions}
  for k, v in pairs(def) do
    schema[k] = v
  end
  local validator = jsonschema.generate_validator(schema)
  if schema.properties and schema.properties.method and schema.properties.method.const then
    _M[key] = function(params)
      return validator({method = schema.properties.method.const, params = params})
    end
  else
    _M[key] = validator
  end
end

return _M
