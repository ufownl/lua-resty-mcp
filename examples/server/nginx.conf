worker_processes auto;

events {
}

env https_proxy;

http {
  lua_package_path '../../lib/?.lua;;';
  lua_shared_dict f1_celandar 64m;
  lua_shared_dict guess_disease 64m;

  include ngx_conf/resolvers/*;
  include ngx_conf/lua_ssl/*;

  server {
    listen 1234;

    location = /f1-calendar {
      content_by_lua_block {
        require("resty.mcp").transport.streamable_http.endpoint(function(mcp, server)
          local ok, err = require("f1-calendar.server").declare(mcp, server)
          if ok then
            server:run({
              capabilities = {
                completions = false,
                logging = false,
                prompts = false,
                resources = false
              }
            })
          else
            ngx.log(ngx.ERR, err)
          end
        end, {
          message_bus = {
            type = "builtin",
            shm_zone = "f1_celandar"
          }
        })
      }
    }

    location = /guess-disease {
      content_by_lua_block {
        require("resty.mcp").transport.streamable_http.endpoint(function(mcp, server)
          local game = require("guess-disease.server").new()
          local instructions, err = game:initialize(mcp, server)
          if instructions then
            server:run({
              capabilities = {
                completions = false,
                logging = false,
                prompts = false
              },
              instructions = instructions
            })
          else
            ngx.log(ngx.ERR, err)
          end
        end, {
          message_bus = {
            type = "builtin",
            shm_zone = "guess_disease"
          }
        })
      }

      add_header X-Accel-Buffering no;
    }
  }
}
